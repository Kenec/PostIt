# version: 2
# jobs:
#   build:
#     working_directory: ~/tmp
#     docker:
#       - image: gcr.io/cicdtest-192020/kene
#         auth:
#           #Put the contents of keyfile.json into an environment variable for the build called GCR_CREDS, which is then passed in.
#           username: _json_key
#           password: $GOOGLE_AUTH 
#       - steps:
#         - checkout
#         - run: npm install
#         - run: npm run test-prod
#         - run:
#           name: Dump Google Cloud Credentials to file
#           command: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json


version: 2
jobs:
  build:
    working_directory: /tmp/build
    docker:
      - image: circleci/node:7.4
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run test
          command: npm run test-prod
      # - deploy:
      #     name: Publish to Docker Hub
      #     command: |
      #       if [ "${CIRCLE_BRANCH}" == "master" ]; then
      #         apk add --no-cache docker
      #         docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASSWORD}
      #         sbt docker:publish
      #         curl --user ${CIRCLE_API_TOKEN}: \
      #           --data build_parameters[CIRCLE_JOB]=deploy_to_gce \
      #           --data revision=$CIRCLE_SHA1 \
      #           https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
      #       fi
  deploy_to_gce:
    working_directory: /
    docker:
      - image: ggcr.io/cicdtest-192020/kene
    steps:
      - run:
          name: Deploy to GCE
          command: |
            echo $GCE_SERVICE | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud config set project cicdtest-192020
            gcloud container clusters get-credentials cicd-demo-cluster	 --zone us-central1-a --project CICDTest
            # kubectl rolling-update pairing-buddy-latest --image=asarturas/pairing-buddy:latest --image-pull-policy Always

