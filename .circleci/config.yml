version: 2
jobs:
  build:
    working_directory: /tmp/build
    docker:
      - image: circleci/node:6.11.2
    steps:
      - checkout
      - run:
          name: Install npm
          command: npm install
      - run:
          name: Run test
          command: npm run test-prod
  deploy:
    working_directory: /tmp/build
    docker:
      - image: google/cloud-sdk
        auth:
        #Put the contents of keyfile.json into an environment variable for the build called GCR_CREDS, which is then passed in.
        username: _json_key
        password: $GOOGLE_AUTH
    #Ensure that gcloud and kubectl are updated.
    dependencies:
      pre:
        - gcloud --quiet components update --version 120.0.0
        - gcloud --quiet components update --version 120.0.0 kubectl
    steps:
      - checkout
      - run:
          name: Deploy to GCE
          command: |
            echo ${GOOGLE_AUTH} | base64 --decode --ignore-garbage > ${HOME}/gcp-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set container/cluster ${GOOGLE_CLUSTER_NAME}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
            # service docker start
            docker build -t gcr.io/${GOOGLE_PROJECT_ID}/node-app:v1 .
            gcloud docker -- push gcr.io/${GOOGLE_PROJECT_ID}/node-app:v1
            kubectl set image postit-deployment node-app=gcr.io/${GOOGLE_PROJECT_ID}/node-app:v1
            # kubectl rolling-update postit-deployment-3169010646-31tpl --image=gcr.io/cicdtest-192020/node-app:v2 --image-pull-policy Always

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
